name: Generate Release
run-name: ${{ github.run_id }} in ${{ github.workflow }} deploying
on:
    workflow_dispatch:
        inputs:
            BUMP_STRATEGY:
                type: choice
                description: 'Bump strategy (major, minor, patch)'
                options:
                    - major
                    - minor
                    - patch
                required: true
                default: patch
            BRANCH:
                type: string
                description: 'Branch to release'
                required: true
                default: main
jobs:
    generate-release:
        name: Generate Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  fetch-tags: true
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  registry-url: https://registry.npmjs.org
            - name: Install dependencies
              run: npm ci
            - name: Run Build
              run: npm run build:rollup
            - name: Copy package.json, README.md, LICENSE to dist
              run: |
                  cp package.json dist/package.json
                  cp README.md dist/README.md
                  cp LICENSE dist/LICENSE
            - name: Resolve bump strategy
              id: bump_strategy
              env:
                  BUMP_STRATEGY: ${{ github.event.inputs.BUMP_STRATEGY }}
              run: |
                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                      ## Validate input
                      if [[ "$BUMP_STRATEGY" != "major" && "$BUMP_STRATEGY" != "minor" && "$BUMP_STRATEGY" != "patch" ]]; then
                      echo "Invalid bump strategy '$BUMP_STRATEGY'."
                      exit 1
                      fi
                      # echo "{name}={value}" >> $GITHUB_OUTPUT
                      echo "strategy=$BUMP_STRATEGY" >> $GITHUB_OUTPUT
                  else
                      echo "strategy=major" >> $GITHUB_OUTPUT
                  fi
            - name: List tags
              run: git tag -l
            - name: Get latest tag
              id: get_latest_tag
              run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
            - name: Bump version and push tag
              id: tag_version
              uses: mathieudutour/github-tag-action@v6.2
              with:
                  default_bump: ${{ steps.bump_strategy.outputs.strategy }}
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  release_branches: ${{ github.event.inputs.BRANCH }}
            - name: Build Changelog
              id: build_changelog
              uses: mikepenz/release-changelog-builder-action@v5
              with:
                  fromTag: ${{ steps.get_latest_tag.outputs.tag }}
                  toTag: ${{ steps.tag_version.outputs.new_tag }}
                  configurationJson: |
                      {
                        "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
                        "pr_template": "- #{{TITLE}}\n   - PR: ##{{NUMBER}}",
                        "empty_template": "- no changes",
                          "categories": [
                              {
                              "title": "## 🚀 Features",
                              "labels": ["features", "Features", "feature", "Feature", "feat", "Feat", "enhancement", "Enhancement"]
                              },
                              {
                              "title": "## 🐞 BugFixes",
                              "labels": ["bugfix", "Bugfix", "bug", "Bug", "fix", "Fix"]
                              },
                              {
                              "title": "## 🔨 Refactors",
                              "labels": ["refactor"]
                              },
                              {
                              "title": "## 📃 Documentation",
                              "labels": ["documentation", "docs", "Documentation", "Docs"]
                              },
                              {
                              "title": "## 🧪 CI/CD",
                              "labels": ["ci/cd", "CI/CD"]
                              },
                              {
                              "title": "## 💬 Other",
                              "labels": ["other"]
                              }
                          ]
                      }
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ steps.tag_version.outputs.new_tag }}
                  name: Release ${{ steps.tag_version.outputs.new_tag }}
                  body: ${{ steps.build_changelog.outputs.changelog }}
            - name: Set up Git user
              run: |
                  git config --global user.name "${{ github.actor }}"
                  git config --global user.email "${{ github.actor }}@users.noreply.github.com"
            - name: add registry.npmjs.org to .npmrc
              run: |
                  echo "//registry.npmjs.org/:_authToken=\${NODE_AUTH_TOKEN}" > .npmrc
                  echo "commit-hooks=false" > .npmrc
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: update package.json version
              run: |
                  npm version --no-commit-hooks ${{ steps.bump_strategy.outputs.strategy }}
            - name: deploy to npm
              run: |
                  npm publish ./dist --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                  NODE_ENV: production
                  CI: 'true'
